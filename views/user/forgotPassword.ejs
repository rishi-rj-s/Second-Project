<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.6.0/dist/sweetalert2.all.min.js"></script>
    <title>Rishi Studio</title>
    <style>
        .carousel-inner img {
            width: 100%;
            height: auto;
            object-fit: cover;
        }

        a {
            text-decoration: none;
            color: white;
        }
    </style>
    <link rel="icon" type="image/x-icon" href="/public/img/icon.jpg">
</head>

<body>

    <!-- nav -->

    <header>
        <nav class="navbar navbar-expand-lg bg-body-tertiary">
            <div class="container-fluid">
                <a class="navbar-brand" href="#">
                    <em>
                        <h2><i class="bi bi-gem pe-2"></i>RISHI STUDIO</h2>
                    </em>
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
                    data-bs-target="#navbarNavDropdown" aria-controls="navbarNavDropdown" aria-expanded="false"
                    aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse justify-content-end" id="navbarNavDropdown">
                    <ul class="navbar-nav">
                        <li class="nav-item">
                            <a class="nav-link active" aria-current="page" href="/"><i class="bi bi-house"></i> Home</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <main>
        <div class="container">
            <section class="vh-100">
                <div class="container py-5 h-100">
                    <div class="row d-flex justify-content-center align-items-center">
                        <div class="col col-xl-10">
                            <div class="card" style="border-radius: 1rem;">
                                <div class="row g-0">
                                    <div class="col-md-6 col-lg-5 d-none d-md-block">
                                        <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-login-form/img1.webp"
                                            alt="login form" class="img-fluid" style="border-radius: 1rem 0 0 1rem;" />
                                    </div>
                                    <div class="col-md-6 col-lg-7 d-flex align-items-center">
                                        <div class="card-body p-4 p-lg-5 text-black">

                                            <form id="passwordForm">
                                                <% if (user === "loggedout") { %>
                                                    <div class="d-flex align-items-center justify-content-center mb-3 pb-1">
                                                        <span class="h1 fw-bold mb-0">Forgot Password!</span>
                                                    </div>
                                                <% } else { %>
                                                    <div class="d-flex align-items-center justify-content-center mb-3 pb-1">
                                                        <span class="h1 fw-bold mb-0">Change Password!</span>
                                                    </div>
                                                <% } %>

                                                <div class="div" id="dynamicDiv">
                                                    <div data-mdb-input-init class="form-outline mb-4">
                                                        <input type="email" name="email" id="form2Example17"
                                                            class="form-control form-control-lg emailAdd" />
                                                        <label class="form-label">Email address</label>
                                                    </div>

                                                    <div class="pt-1 mb-4">
                                                        <button data-mdb-button-init data-mdb-ripple-init
                                                            class="btn btn-dark btn-lg btn-block"
                                                            id="sendOtpButton">Send OTP</button>
                                                    </div>
                                                </div>

                                                <p class="mt-5 pb-lg-2" style="color: #393f81;">Don't have an account?
                                                    <a href="/user/signup" style="color: #393f81;"> Register here</a>
                                                </p>
                                                <a href="#!" class="small text-muted">Terms of use.</a>
                                                <a href="#!" class="small text-muted">Privacy policy</a>
                                            </form>

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
        </div>
    </main>

    <script>
        document.getElementById('sendOtpButton').addEventListener('click', async function (event) {
            event.preventDefault();
            if (!validateForm()) return;

            const userEmail = document.getElementById('form2Example17').value;
            const isLoggedIn = <% user === "loggedin" %>; // Adjust this based on how you identify logged-in users

            try {
                const response = await fetch('/user/sendOtp', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ email: userEmail })
                });

                const data = await response.json();

                if (response.ok) {
                    alert('OTP sent successfully and is valid for 30 secs');
                    document.getElementById('dynamicDiv').innerHTML = `
                        <div data-mdb-input-init class="form-outline my-4">
                            <input type="text" id="otpInput" class="form-control form-control-lg" name="otp" required />
                            <label class="form-label" for="otpInput">Enter OTP</label>
                            <button type="button" id="verifyOtp" class="btn btn-danger m-2">Verify OTP</button>
                            <div id="timer" class="text-muted">OTP is valid for <span id="countdown">30</span> seconds.</div>
                        </div>
                    `;
                    startTimer(30);

                    document.getElementById('verifyOtp').addEventListener('click', async function () {
                        const otp = document.getElementById('otpInput').value;

                        const response = await fetch('/user/verifyOtp', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ otp })
                        });

                        const data = await response.json();

                        if (response.ok) {
                            switch (data.message) {
                                case "Verified":
                                    document.getElementById('dynamicDiv').innerHTML = `
                                        <div data-mdb-input-init class="form-outline my-4">
                                            <form>
                                                <input type="text" id="newPass" class="form-control form-control-lg" name="newPass" required />
                                                <label class="form-label" for="newPass">Enter New Password</label>
                                                <button type="button" id="savePass" class="btn btn-danger m-2">Change Password</button>
                                            </form>
                                        </div>
                                    `;
                                    document.getElementById('savePass').addEventListener('click', async function () {
                                        const newPass = document.getElementById('newPass').value;
                                        const updatePasswordUrl = isLoggedIn ? '/user/updatePassword' : '/user/resetPassword';

                                        try {
                                            const response = await fetch(updatePasswordUrl, {
                                                method: 'PATCH',
                                                headers: {
                                                    'Content-Type': 'application/json'
                                                },
                                                body: JSON.stringify({ email: userEmail, pass: newPass })
                                            });

                                            const result = await response.json();

                                            if (response.ok) {
                                                Swal.fire({
                                                    title: "Success",
                                                    text: "Password updated successfully!",
                                                    icon: "success",
                                                    timer: 1500
                                                }).then(() => window.location.href = '/user/login?msg=success');
                                            } else {
                                                Swal.fire({
                                                    title: "Error",
                                                    text: result.error || 'An error occurred while updating the password.',
                                                    icon: "error"
                                                });
                                            }
                                        } catch (error) {
                                            Swal.fire({
                                                title: "Error",
                                                text: 'An error occurred while updating the password.',
                                                icon: "error"
                                            });
                                        }
                                    });
                                    break;
                                case "Invalid":
                                    Swal.fire({
                                        title: "Invalid OTP",
                                        text: "The OTP is invalid. Please try again.",
                                        icon: "error"
                                    });
                                    break;
                                case "Expired":
                                    Swal.fire({
                                        title: "Expired OTP",
                                        text: "The OTP has expired. Please request a new one.",
                                        icon: "error"
                                    });
                                    break;
                                default:
                                    Swal.fire({
                                        title: "Error",
                                        text: "Unexpected response from server.",
                                        icon: "error"
                                    });
                            }
                        } else {
                            Swal.fire({
                                title: "Error",
                                text: data.error || 'Verification failed. Please try again.',
                                icon: "error"
                            });
                        }
                    });
                } else {
                    Swal.fire({
                        title: "Error",
                        text: data.error || 'Failed to send OTP.',
                        icon: "error"
                    });
                }
            } catch (error) {
                Swal.fire({
                    title: "Error",
                    text: 'An error occurred while sending the OTP.',
                    icon: "error"
                });
            }
        });

        function startTimer(duration) {
            let timer = duration, seconds;
            const countdownElement = document.getElementById('countdown');
            const interval = setInterval(function () {
                seconds = --timer;
                countdownElement.textContent = seconds < 10 ? "0" + seconds : seconds;

                if (seconds <= 0) {
                    clearInterval(interval);
                    // Optionally: Handle timer expiration, e.g., disable the OTP verification button
                }
            }, 1000);
        }

        function validateForm() {
            const email = document.querySelector('[name="email"]').value;
            if (!email.trim()) {
                Swal.fire({
                    title: 'Error!',
                    text: 'Email is required.',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
                return false;
            }
            return true;
        }

        const urlParams = new URLSearchParams(window.location.search);
        const message = urlParams.get('msg');
        if (message) {
            if (message.includes('email')) {
                Swal.fire({
                    title: "Failure",
                    text: "Email/User not found!",
                    icon: "error",
                    confirmButtonText: 'OK'
                });
            } else if (message.includes('password')) {
                Swal.fire({
                    title: "Failure",
                    text: "Wrong password!",
                    icon: "error",
                    confirmButtonText: 'OK'
                });
            } else if (message.includes('success')) {
                Swal.fire({
                    title: "Success",
                    text: "Password Changed!",
                    icon: "success",
                    timer: 1500,
                    confirmButtonText: 'OK'
                });
            }
            window.history.replaceState({}, document.title, window.location.pathname);
        }
    </script>
</body>

</html>